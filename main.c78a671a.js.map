{"version":3,"sources":["scripts/main.js"],"names":["field","page","document","documentElement","score","querySelector","button","table","messageStart","messageLose","messageWin","randomInt","min","max","Math","floor","random","twoOrFour","randomNum","randomNew","count","row","length","some","cell","found","randomRow","randomCell","pageRefresh","rows","cells","className","classList","add","textContent","scoreCounter","filterZero","filter","moving","movedRow","push","moveLeft","moveRight","reverse","moveUp","newRow","moveDown","winCheck","loseCheck","checkUp","checkDown","checkRight","checkLeft","spawnCheck","counter","addEventListener","contains","remove","eve","preventDefault","key"],"mappings":";AAAA,aAEA,IAyMIA,EAzMEC,EAAOC,SAASC,gBAChBC,EAAQF,SAASG,cAAc,eAC/BC,EAASJ,SAASG,cAAc,WAChCE,EAAQL,SAASG,cAAc,eAC/BG,EAAeN,SAASG,cAAc,kBACtCI,EAAcP,SAASG,cAAc,iBACrCK,EAAaR,SAASG,cAAc,gBAGpCM,EAAY,SAASC,EAAKC,GACvBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAG5CK,EAAY,WAGZC,OAAc,IAFAJ,KAAKC,MAAsB,GAAhBD,KAAKE,UAGzB,EAGF,GAGHG,EAAY,WAGX,IAFDC,IAAAA,EAAQ,EAEHC,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IAChCrB,EAAMqB,GAAKE,KAAK,SAAAC,GAAQA,OAAS,IAATA,KAC1BJ,IAIAA,GAAU,IAAVA,EAAAA,CAMG,IAFHK,IAAAA,GAAQ,GAEJA,GAAO,CACPC,IAAAA,EAAYf,EAAU,EAAG,GACzBgB,EAAahB,EAAU,EAAG,GAEK,IAAjCX,EAAM0B,GAAWC,KACnB3B,EAAM0B,GAAWC,GAAcV,IAC/BQ,GAAQ,GAIZG,MAGIA,EAAc,WACb,IAAA,IAAIP,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IAC/B,IAAA,IAAIG,EAAO,EAAGA,EAAOxB,EAAMqB,GAAKC,OAAQE,IACvCjB,EAAMsB,KAAKR,GAAKS,MAAMN,KAAUxB,EAAMqB,GAAKG,KAC7CjB,EAAMsB,KAAKR,GAAKS,MAAMN,GAAMO,UAAY,GACxCxB,EAAMsB,KAAKR,GAAKS,MAAMN,GAAMQ,UAAUC,IAAI,cAE1C1B,EAAMsB,KAAKR,GAAKS,MAAMN,GACnBQ,UAAUC,IAAmBjC,eAAAA,OAAAA,EAAMqB,GAAKG,KAC3CjB,EAAMsB,KAAKR,GAAKS,MAAMN,GAAMU,YAAclC,EAAMqB,GAAKG,IAAS,IAKpEpB,EAAM8B,YAAcC,GAGhBC,EAAa,SAASf,GACnBA,OAAAA,EAAIgB,OAAO,SAAAb,GAAQA,OAAS,IAATA,KAGtBc,EAAS,SAASjB,GAGjB,IAFDkB,IAAAA,EAAWH,EAAWf,GAEjBG,EAAO,EAAGA,EAAOe,EAASjB,OAAS,EAAGE,IACzCe,EAASf,KAAUe,EAASf,EAAO,KACrCe,EAASf,IAAS,EAClBW,GAAgBI,EAASf,GACzBe,EAASf,EAAO,GAAK,GAMlBe,IAFPA,EAAWH,EAAWG,GAEfA,EAASjB,OAASD,EAAIC,QAC3BiB,EAASC,KAAK,GAGTD,OAAAA,GAGHE,EAAW,WACV,IAAA,IAAIpB,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IACpCrB,EAAMqB,GAAOiB,EAAOtC,EAAMqB,KAIxBqB,EAAY,WACX,IAAA,IAAIrB,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IACpCrB,EAAMqB,GAAOiB,EAAOtC,EAAMqB,GAAKsB,WAAWA,WAIxCC,EAAS,WACR,IAAA,IAAIpB,EAAO,EAAGA,EAAOxB,EAAMsB,OAAQE,IAAQ,CAC1CqB,IAAAA,EAAS,CACX7C,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,IAGXqB,EAASP,EAAOO,GAChB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,KAItBC,EAAW,WACV,IAAA,IAAItB,EAAO,EAAGA,EAAOxB,EAAMsB,OAAQE,IAAQ,CAC1CqB,IAAAA,EAAS,CACX7C,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,GACTxB,EAAM,GAAGwB,IAGXqB,EAASP,EAAOO,GAChB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,GACxB7C,EAAM,GAAGwB,GAAQqB,EAAO,KAItBE,EAAW,WACV,IAAA,IAAI1B,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IAC/B,IAAA,IAAIG,EAAO,EAAGA,EAAOxB,EAAMqB,GAAKC,OAAQE,IACvCxB,GAAqB,OAArBA,EAAMqB,GAAKG,GACN,OAAA,EAKN,OAAA,GAGHwB,EAAY,WACX,IAAA,IAAI3B,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IAC/B,IAAA,IAAIG,EAAO,EAAGA,EAAOxB,EAAMqB,GAAKC,OAAQE,IAAQ,CAC/CxB,GAAqB,IAArBA,EAAMqB,GAAKG,GACN,OAAA,EAGLyB,IAAAA,OAAJ,EAAaC,OAAb,EAAwBC,OAAxB,EAAoCC,OAApC,EAkBIH,GAhBAjD,EAAMqB,EAAM,KACd4B,EAAUjD,EAAMqB,GAAKG,KAAUxB,EAAMqB,EAAM,GAAGG,IAG5CxB,EAAMqB,EAAM,KACd6B,EAAYlD,EAAMqB,GAAKG,KAAUxB,EAAMqB,EAAM,GAAGG,IAG9CxB,EAAMqB,GAAKG,EAAO,KACpB2B,EAAanD,EAAMqB,GAAKG,KAAUxB,EAAMqB,GAAKG,EAAO,IAGlDxB,EAAMqB,GAAKG,EAAO,KACpB4B,EAAYpD,EAAMqB,GAAKG,KAAUxB,EAAMqB,GAAKG,EAAO,IAGjDyB,GAAWC,GAAaC,GAAcC,EACjC,OAAA,EAKN,OAAA,GAGHC,EAAa,WAGZ,IAFDC,IAAAA,EAAU,EAELjC,EAAM,EAAGA,EAAMrB,EAAMsB,OAAQD,IAC/B,IAAA,IAAIG,EAAO,EAAGA,EAAOxB,EAAMqB,GAAKC,OAAQE,IACvCxB,EAAMqB,GAAKG,MAAWjB,EAAMsB,KAAKR,GAAKS,MAAMN,GAAMU,aACpDoB,IAKU,IAAZA,GACFnC,KAMAgB,EAAe,EAEnB7B,EAAOiD,iBAAiB,QAAS,WAC3BjD,EAAO0B,UAAUwB,SAAS,WAC5BlD,EAAO0B,UAAUyB,OAAO,SACxBnD,EAAO0B,UAAUC,IAAI,WACrB3B,EAAO4B,YAAc,UACrB1B,EAAawB,UAAUC,IAAI,WAG7BE,EAAe,EACf/B,EAAM8B,YAAcC,EACpB1B,EAAYuB,UAAUC,IAAI,UAC1BvB,EAAWsB,UAAUC,IAAI,UACzB3B,EAAO0B,UAAUyB,OAAO,kBAExBzD,EAAQ,CACN,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGZmB,IACAA,MAGFlB,EAAKsD,iBAAiB,UAAW,SAACG,GAGxBA,OAFRA,EAAIC,iBAEID,EAAIE,KACL,IAAA,UACHhB,IACA,MAGG,IAAA,YACHE,IACA,MAGG,IAAA,YACHL,IACA,MAGG,IAAA,aACHC,IAKJW,IACAzB,IAEIoB,MACFvC,EAAYuB,UAAUyB,OAAO,UAC7BnD,EAAO0B,UAAUC,IAAI,oBAGnBc,KACFrC,EAAWsB,UAAUyB,OAAO","file":"main.c78a671a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst page = document.documentElement;\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst table = document.querySelector('.game-field');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\n// #region functions\nconst randomInt = function(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nconst twoOrFour = function() {\n  const randomNum = Math.floor(Math.random() * 10);\n\n  if (randomNum === 4) {\n    return 4;\n  }\n\n  return 2;\n};\n\nconst randomNew = function() {\n  let count = 0;\n\n  for (let row = 0; row < field.length; row++) {\n    if (field[row].some(cell => cell === 0)) {\n      count++;\n    }\n  }\n\n  if (count === 0) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const randomRow = randomInt(0, 4);\n    const randomCell = randomInt(0, 4);\n\n    if (field[randomRow][randomCell] === 0) {\n      field[randomRow][randomCell] = twoOrFour();\n      found = true;\n    }\n  }\n\n  pageRefresh();\n};\n\nconst pageRefresh = function() {\n  for (let row = 0; row < field.length; row++) {\n    for (let cell = 0; cell < field[row].length; cell++) {\n      if (table.rows[row].cells[cell] !== field[row][cell]) {\n        table.rows[row].cells[cell].className = '';\n        table.rows[row].cells[cell].classList.add('field-cell');\n\n        table.rows[row].cells[cell]\n          .classList.add(`field-cell--${field[row][cell]}`);\n        table.rows[row].cells[cell].textContent = field[row][cell] || '';\n      }\n    }\n  }\n\n  score.textContent = scoreCounter;\n};\n\nconst filterZero = function(row) {\n  return row.filter(cell => cell !== 0);\n};\n\nconst moving = function(row) {\n  let movedRow = filterZero(row);\n\n  for (let cell = 0; cell < movedRow.length - 1; cell++) {\n    if (movedRow[cell] === movedRow[cell + 1]) {\n      movedRow[cell] *= 2;\n      scoreCounter += movedRow[cell];\n      movedRow[cell + 1] = 0;\n    }\n  }\n\n  movedRow = filterZero(movedRow);\n\n  while (movedRow.length < row.length) {\n    movedRow.push(0);\n  }\n\n  return movedRow;\n};\n\nconst moveLeft = function() {\n  for (let row = 0; row < field.length; row++) {\n    field[row] = moving(field[row]);\n  }\n};\n\nconst moveRight = function() {\n  for (let row = 0; row < field.length; row++) {\n    field[row] = moving(field[row].reverse()).reverse();\n  }\n};\n\nconst moveUp = function() {\n  for (let cell = 0; cell < field.length; cell++) {\n    let newRow = [\n      field[0][cell],\n      field[1][cell],\n      field[2][cell],\n      field[3][cell],\n    ];\n\n    newRow = moving(newRow);\n    field[0][cell] = newRow[0];\n    field[1][cell] = newRow[1];\n    field[2][cell] = newRow[2];\n    field[3][cell] = newRow[3];\n  }\n};\n\nconst moveDown = function() {\n  for (let cell = 0; cell < field.length; cell++) {\n    let newRow = [\n      field[3][cell],\n      field[2][cell],\n      field[1][cell],\n      field[0][cell],\n    ];\n\n    newRow = moving(newRow);\n    field[0][cell] = newRow[3];\n    field[1][cell] = newRow[2];\n    field[2][cell] = newRow[1];\n    field[3][cell] = newRow[0];\n  }\n};\n\nconst winCheck = function() {\n  for (let row = 0; row < field.length; row++) {\n    for (let cell = 0; cell < field[row].length; cell++) {\n      if (field[row][cell] === 2024) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst loseCheck = function() {\n  for (let row = 0; row < field.length; row++) {\n    for (let cell = 0; cell < field[row].length; cell++) {\n      if (field[row][cell] === 0) {\n        return false;\n      };\n\n      let checkUp, checkDown, checkRight, checkLeft;\n\n      if (field[row + 1]) {\n        checkUp = field[row][cell] === field[row + 1][cell];\n      }\n\n      if (field[row - 1]) {\n        checkDown = field[row][cell] === field[row - 1][cell];\n      }\n\n      if (field[row][cell + 1]) {\n        checkRight = field[row][cell] === field[row][cell + 1];\n      }\n\n      if (field[row][cell - 1]) {\n        checkLeft = field[row][cell] === field[row][cell - 1];\n      }\n\n      if (checkUp || checkDown || checkRight || checkLeft) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst spawnCheck = function() {\n  let counter = 0;\n\n  for (let row = 0; row < field.length; row++) {\n    for (let cell = 0; cell < field[row].length; cell++) {\n      if (field[row][cell] !== +table.rows[row].cells[cell].textContent) {\n        counter++;\n      }\n    }\n  }\n\n  if (counter !== 0) {\n    randomNew();\n  }\n};\n// #endregion\n// #region interactivePage\nlet field;\nlet scoreCounter = 0;\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n  }\n\n  scoreCounter = 0;\n  score.textContent = scoreCounter;\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  button.classList.remove('restart.active');\n\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  randomNew();\n  randomNew();\n});\n\npage.addEventListener('keydown', (eve) => {\n  eve.preventDefault();\n\n  switch (eve.key) {\n    case 'ArrowUp': {\n      moveUp();\n      break;\n    }\n\n    case 'ArrowDown': {\n      moveDown();\n      break;\n    }\n\n    case 'ArrowLeft': {\n      moveLeft();\n      break;\n    }\n\n    case 'ArrowRight': {\n      moveRight();\n      break;\n    }\n  }\n\n  spawnCheck();\n  pageRefresh();\n\n  if (loseCheck()) {\n    messageLose.classList.remove('hidden');\n    button.classList.add('restart__active');\n  }\n\n  if (winCheck()) {\n    messageWin.classList.remove('hidden');\n  }\n});\n// #endregion\n"]}